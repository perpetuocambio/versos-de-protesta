name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Python for validation scripts
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install Python dependencies
      run: |
        pip install pyyaml
        
    - name: Install npm dependencies
      run: npm ci
      
    - name: Validate lesson structure (if any lessons exist)
      run: |
        if ls src/content/blog/dia-*.md 1> /dev/null 2>&1; then
          echo "📋 Validating lesson structure..."
          npm run validate-lessons
        else
          echo "ℹ️ No lesson files found to validate"
        fi
        
    - name: Build dictionary and site
      run: |
        echo "🔧 Building dictionary and site for production..."
        npm run build
        
    - name: Generate build report
      run: |
        echo "## 📊 Build Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f src/data/dictionary-stats.json ]; then
          TOTAL_WORDS=$(cat src/data/dictionary-stats.json | jq -r '.totalUniqueWords // 0')
          TOTAL_LESSONS=$(cat src/data/dictionary-stats.json | jq -r '.byLesson | length // 0')
          echo "- **Total words:** $TOTAL_WORDS" >> $GITHUB_STEP_SUMMARY
          echo "- **Total lessons:** $TOTAL_LESSONS" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d public/data/internal/v1/dictionary/chunks ]; then
          CHUNK_COUNT=$(ls public/data/internal/v1/dictionary/chunks/*.json 2>/dev/null | wc -l)
          echo "- **Total chunks:** $CHUNK_COUNT" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d dist ]; then
          DIST_SIZE=$(du -sh dist | cut -f1)
          echo "- **Site size:** $DIST_SIZE" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Build completed successfully!" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Deployment summary
      run: |
        echo "## 🚀 Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Site successfully deployed to GitHub Pages!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🌐 **Live URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY