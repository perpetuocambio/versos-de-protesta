---
import Layout from '../../layouts/Layout.astro';
import DynamicDictionary from '../../components/DynamicDictionary.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import Icon from '../../components/Icon.astro';

export async function getStaticPaths() {
  const languages = ['es', 'en', 'de', 'pt', 'ru', 'ru-rom', 'zh', 'zh-pinyin', 'radical'];
  return languages.map(lang => ({
    params: { lang }
  }));
}

const { lang } = Astro.params;

const availableLangs = {
  es: 'Espa√±ol',
  en: 'English',
  de: 'Deutsch',
  pt: 'Portugu√™s',
  ru: '–†—É—Å—Å–∫–∏–π',
  'ru-rom': '–†—É—Å—Å–∫–∏–π (Rom.)',
  zh: '‰∏≠Êñá',
  'zh-pinyin': '‰∏≠Êñá (Pinyin)',
  radical: 'üîç Radicales',
};

const breadcrumbItems = [
  { href: `${import.meta.env.BASE_URL}`, label: 'Inicio' },
  { href: `${import.meta.env.BASE_URL}diccionario/`, label: 'Diccionario' },
  { label: availableLangs[lang] },
];

// estimatedWords se cargar√° din√°micamente en el cliente, aqu√≠ solo un placeholder si es necesario
const estimatedWords = 100; // Valor por defecto, el componente JS lo actualizar√°

// Variables para controlar la disponibilidad y errores del diccionario
const dictionaryAvailable = true;
const dictionaryError = null;
---

<Layout title={`Diccionario - ${availableLangs[lang]}`}>
  <Breadcrumb items={breadcrumbItems} />
  
  <div class="dictionary-header">
    <h1 style="display: flex; align-items: center; justify-content: center; gap: var(--space-lg); margin-bottom: var(--space-xl);">
      <Icon name="book" size={40} class="text-revolutionary" />
      Diccionario Acumulativo
      <span class="lang-badge">{availableLangs[lang]}</span>
    </h1>
    
    <div class="lang-switcher">
      {Object.entries(availableLangs).map(([code, name]) => (
        <a 
          href={`${import.meta.env.BASE_URL}diccionario/${code}/`}
          class={code === lang ? 'active' : ''}
        >
          {name}
        </a>
      ))}
    </div>
    
    <div class="performance-info">
      <div class="perf-item">
        <Icon name="zap" size={16} />
        <span>Carga din√°mica</span>
      </div>
      <div class="perf-item">
        <Icon name="database" size={16} />
        <span>~{estimatedWords} palabras</span>
      </div>
      <div class="perf-item">
        <Icon name="clock" size={16} />
        <span>Carga instant√°nea</span>
      </div>
    </div>
  </div>

  <!-- Contenedor del diccionario din√°mico -->
  <div class="dynamic-dictionary-container" 
       data-language={lang} 
       data-estimated-words={estimatedWords}>
    
    <DynamicDictionary language={lang} availableLangs={availableLangs} baseUrl={import.meta.env.BASE_URL} />
    
  </div>
</Layout>

<style is:global>
  .dictionary-header {
    margin-bottom: var(--space-2xl);
  }
  
  .lang-badge {
    background: var(--color-revolutionary-red);
    color: white;
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-md);
    font-size: 0.9rem;
    font-weight: 600;
  }
  
  .lang-switcher {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--space-sm);
    margin-bottom: var(--space-2xl);
    padding: var(--space-lg);
    background: var(--color-paper-warm);
    border-radius: var(--radius-xl);
    border: 1px solid var(--color-border-light);
  }
  
  .lang-switcher a {
    padding: var(--space-sm) var(--space-md);
    text-decoration: none;
    color: var(--color-text-secondary);
    border-radius: var(--radius-md);
    font-weight: 500;
    font-size: 0.9rem;
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }
  
  .lang-switcher a:hover {
    background: var(--color-paper);
    color: var(--color-text-primary);
    border-color: var(--color-border);
  }
  
  .lang-switcher a.active {
    background: var(--color-revolutionary-red);
    color: white;
    font-weight: 600;
  }
  
  .performance-info {
    display: flex;
    justify-content: center;
    gap: var(--space-xl);
    margin-bottom: var(--space-2xl);
    padding: var(--space-lg);
    background: linear-gradient(135deg, var(--color-socialist-gold-light), var(--color-revolutionary-red-light));
    border-radius: var(--radius-lg);
    border: 1px solid var(--color-border);
  }
  
  .perf-item {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: 0.9rem;
    color: var(--color-charcoal);
    font-weight: 500;
  }
  
  .dynamic-dictionary-container {
    min-height: 60vh;
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .lang-switcher {
      gap: var(--space-xs);
    }
    
    .lang-switcher a {
      font-size: 0.8rem;
      padding: var(--space-xs) var(--space-sm);
    }
    
    .performance-info {
      flex-direction: column;
      gap: var(--space-sm);
      text-align: center;
    }
    
    .perf-item {
      justify-content: center;
    }
  }
}
</style>

<meta name="astro-base-url" content={import.meta.env.BASE_URL} />