---
import Layout from '../layouts/Layout.astro';
import Icon from '../components/Icon.astro';
import CountryTimelineSimple from '../components/CountryTimelineSimple.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog');

// Extraer canciones con año y origen
const songs = allPosts
  .filter(post => post.data.originalSong)
  .map(post => ({
    title: post.data.originalSong.title,
    artist: post.data.originalSong.artist,
    year: post.data.originalSong.year,
    slug: post.slug,
    genre: post.data.originalSong.genre || 'protest',
    description: post.data.description,
    day: post.data.day,
    origin: post.data.originalSong.origin || 'Desconocido'
  }))
  .sort((a, b) => a.year - b.year);

const minYear = Math.min(...songs.map(s => s.year));
const maxYear = Math.max(...songs.map(s => s.year));
const timeSpan = maxYear - minYear;
---

<Layout title="Versos de Protesta - Historia Musical de la Resistencia">
  <!-- Hero Section -->
  <section style="
    text-align: center; 
    margin-bottom: var(--space-2xl);
    padding: var(--space-2xl) 0;
    background: linear-gradient(135deg, var(--color-paper-warm), var(--color-paper));
    border-radius: var(--radius-xl);
    border: 1px solid var(--color-border-light);
  ">
    <div style="
      display: flex;
      align-items: center;
      justify-content: center;
      gap: var(--space-lg);
      margin-bottom: var(--space-lg);
    ">
      <Icon name="flag" size={40} class="text-revolutionary" />
      <h1 style="margin: 0; background: linear-gradient(135deg, var(--color-revolutionary-red), var(--color-socialist-gold)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">
        Historia Musical de la Resistencia
      </h1>
      <Icon name="music" size={40} class="text-socialist" />
    </div>
    
    <p style="font-size: 1.1rem; max-width: 700px; margin: 0 auto var(--space-lg) auto; line-height: 1.6; color: #6b7280;">
      Navega por las canciones revolucionarias desde <strong>{minYear}</strong> hasta <strong>{maxYear}</strong>. 
      Cada himno es una ventana a la historia, la gramática y el alma de los pueblos.
    </p>
    
    <!-- Quick Stats -->
    <div style="
      display: flex;
      justify-content: center;
      gap: var(--space-xl);
      margin-top: var(--space-lg);
      flex-wrap: wrap;
    ">
      <div style="text-align: center;">
        <div style="font-size: 2rem; font-weight: 800; color: var(--color-revolutionary-red);">
          {songs.length}
        </div>
        <div style="font-size: 0.9rem; color: var(--color-text-secondary);">
          Himnos Revolucionarios
        </div>
      </div>
      
      <div style="text-align: center;">
        <div style="font-size: 2rem; font-weight: 800; color: var(--color-socialist-gold);">
          {timeSpan}
        </div>
        <div style="font-size: 0.9rem; color: var(--color-text-secondary);">
          Años de Historia
        </div>
      </div>
      
      <div style="text-align: center;">
        <div style="font-size: 2rem; font-weight: 800; color: var(--color-charcoal);">
          5
        </div>
        <div style="font-size: 0.9rem; color: var(--color-text-secondary);">
          Idiomas Paralelos
        </div>
      </div>
    </div>
  </section>

  <!-- Timeline interactivo geográfico -->
  <CountryTimelineSimple songs={songs} />

  <!-- Grid de canciones como respaldo -->
  <div style="margin-top: 4rem;">
    <h2 style="font-size: 2rem; margin-bottom: 2rem; color: #1f2937; text-align: center; display: flex; align-items: center; justify-content: center; gap: 0.75rem;">
      <Icon name="book" size={32} />
      Catálogo Completo
    </h2>
    
    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 1.5rem;">
      {songs.map((song, index) => {
        const colors = ['#ef4444', '#f97316', '#eab308', '#22c55e', '#06b6d4', '#3b82f6', '#8b5cf6'];
        const color = colors[index % colors.length];
        
        return (
          <div style={`
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            border-left: 4px solid ${color};
            transition: transform 0.2s, box-shadow 0.2s;
          `} onmouseover="this.style.transform='translateY(-4px)'; this.style.boxShadow='0 8px 25px rgba(0,0,0,0.15)'" onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 12px rgba(0,0,0,0.1)'">
            
            <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">
              <span style={`
                background: ${color};
                color: white;
                padding: 0.25rem 0.75rem;
                border-radius: 9999px;
                font-weight: 600;
                font-size: 0.9rem;
              `}>{song.year}</span>
              <span style="
                background: #f0f9ff;
                color: #0369a1;
                padding: 0.25rem 0.75rem;
                border-radius: 9999px;
                font-size: 0.8rem;
                text-transform: capitalize;
              ">{song.genre}</span>
            </div>
            
            <h3 style="margin: 0 0 0.5rem 0; font-size: 1.2rem; color: #1f2937;">
              <a href={`${import.meta.env.BASE_URL}blog/${song.slug}/`} style="color: #2563eb; text-decoration: none;">
                "{song.title}"
              </a>
            </h3>
            
            <p style="margin: 0 0 0.75rem 0; color: #6b7280; font-size: 0.9rem; font-style: italic;">
              {song.artist}
            </p>
            
            <p style="margin: 0; color: #9ca3af; font-size: 0.85rem; line-height: 1.4;">
              {song.description.slice(0, 120)}...
            </p>
          </div>
        );
      })}
    </div>
  </div>

  <!-- Call to Action -->
  <section style="
    text-align: center;
    background: linear-gradient(135deg, var(--color-revolutionary-red-light), var(--color-socialist-gold-light));
    padding: var(--space-3xl);
    border-radius: var(--radius-xl);
    border: 1px solid var(--color-border);
    margin-top: 4rem;
  ">
    <h2 style="margin-bottom: var(--space-lg); color: var(--color-charcoal);">
      ¿Preparado para el Aprendizaje Revolucionario?
    </h2>
    <p style="margin-bottom: var(--space-xl); max-width: 600px; margin-left: auto; margin-right: auto;">
      Cada himno es una lección. Cada verso, una ventana a 5 culturas. Únete al movimiento que aprende idiomas cantando la historia de la lucha obrera.
    </p>
    
    <div style="
      display: flex;
      gap: var(--space-lg);
      justify-content: center;
      flex-wrap: wrap;
    ">
      <a 
        href={`${import.meta.env.BASE_URL}blog/`}
        class="btn btn-primary"
      >
        <Icon name="book-open" size={20} />
        Ver Todas las Lecciones
      </a>
      
      <a 
        href={`${import.meta.env.BASE_URL}diccionario/`}
        class="btn btn-secondary"
      >
        <Icon name="book" size={20} />
        Explorar Diccionario
      </a>
    </div>
  </section>
</Layout>

<style>
  .song-point:hover {
    width: 20px !important;
    height: 20px !important;
    box-shadow: 0 0 0 4px currentColor, 0 6px 20px rgba(0,0,0,0.3) !important;
  }
</style>

<script>
  // Interactividad del timeline
  document.addEventListener('DOMContentLoaded', function() {
    const songPoints = document.querySelectorAll('.song-point');
    const songInfo = document.getElementById('song-info');
    
    songPoints.forEach(point => {
      point.addEventListener('click', function() {
        const title = this.dataset.title;
        const year = this.dataset.year;
        const artist = this.dataset.artist;
        const slug = this.dataset.slug;
        
        // Remover selección previa
        songPoints.forEach(p => p.style.transform = 'translate(-50%, -50%) scale(1)');
        
        // Destacar punto seleccionado
        this.style.transform = 'translate(-50%, -50%) scale(1.3)';
        
        // Actualizar panel de información
        songInfo.innerHTML = `
          <div style="text-align: center;">
            <div style="display: inline-block; background: linear-gradient(135deg, #3b82f6, #1d4ed8); color: white; padding: 0.5rem 1.5rem; border-radius: 9999px; font-weight: 700; font-size: 1.1rem; margin-bottom: 1.5rem;">
              ${year}
            </div>
            <h3 style="font-size: 1.8rem; margin: 0 0 0.5rem 0; color: #1f2937; font-weight: 700;">
              "${title}"
            </h3>
            <p style="color: #6b7280; font-size: 1.1rem; font-style: italic; margin: 0 0 2rem 0;">
              ${artist}
            </p>
            <a 
              href="${import.meta.env.BASE_URL}blog/${slug}/" 
              style="
                display: inline-block;
                background: linear-gradient(135deg, #2563eb, #1d4ed8);
                color: white;
                padding: 0.75rem 2rem;
                border-radius: 8px;
                text-decoration: none;
                font-weight: 600;
                transition: transform 0.2s;
              "
              onmouseover="this.style.transform='translateY(-2px)'"
              onmouseout="this.style.transform='translateY(0)'"
            >
              📖 Ver análisis completo
            </a>
          </div>
        `;
        
        // Scroll suave al panel
        songInfo.scrollIntoView({ behavior: 'smooth', block: 'center' });
      });
      
      // Hover effects
      point.addEventListener('mouseenter', function() {
        if (this.style.transform.indexOf('scale(1.3)') === -1) {
          this.style.transform = 'translate(-50%, -50%) scale(1.15)';
        }
      });
      
      point.addEventListener('mouseleave', function() {
        if (this.style.transform.indexOf('scale(1.3)') === -1) {
          this.style.transform = 'translate(-50%, -50%) scale(1)';
        }
      });
    });
  });
</script>