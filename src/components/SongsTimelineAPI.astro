---
// Timeline de canciones usando nueva arquitectura API
---

<div class="songs-timeline-api" id="songs-timeline-api">
  <!-- Skeleton loader -->
  <div class="timeline-skeleton" id="timeline-skeleton">
    <div class="skeleton-header">
      <div class="skeleton-title"></div>
      <div class="skeleton-subtitle"></div>
    </div>
    <div class="skeleton-timeline">
      {Array.from({length: 6}, (_, i) => (
        <div class="skeleton-event" key={i}>
          <div class="skeleton-year"></div>
          <div class="skeleton-song"></div>
        </div>
      ))}
    </div>
  </div>
  
  <!-- Contenido real -->
  <div class="timeline-content" id="timeline-content" style="display: none;">
    <!-- Se carga din√°micamente -->
  </div>
</div>

<style>
  .songs-timeline-api {
    max-width: 1000px;
    margin: 0 auto;
    padding: var(--space-xl);
  }

  /* Skeleton loader */
  .timeline-skeleton {
    animation: fadeIn 0.5s ease-in-out;
  }

  .skeleton-header {
    text-align: center;
    margin-bottom: var(--space-2xl);
  }

  .skeleton-title {
    height: 2.5rem;
    width: 300px;
    margin: 0 auto var(--space-md);
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: var(--radius-md);
  }

  .skeleton-subtitle {
    height: 1.2rem;
    width: 200px;
    margin: 0 auto;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: var(--radius-sm);
  }

  .skeleton-timeline {
    position: relative;
    padding-left: var(--space-xl);
  }

  .skeleton-timeline::before {
    content: '';
    position: absolute;
    left: 15px;
    top: 0;
    bottom: 0;
    width: 2px;
    background: var(--color-border);
  }

  .skeleton-event {
    position: relative;
    margin-bottom: var(--space-xl);
    padding-left: var(--space-xl);
  }

  .skeleton-event::before {
    content: '';
    position: absolute;
    left: -6px;
    top: 8px;
    width: 12px;
    height: 12px;
    background: var(--color-border);
    border-radius: 50%;
  }

  .skeleton-year {
    height: 1.5rem;
    width: 60px;
    margin-bottom: var(--space-sm);
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: var(--radius-sm);
  }

  .skeleton-song {
    height: 1.2rem;
    width: 250px;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: var(--radius-sm);
  }

  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  /* Timeline real */
  .timeline-container {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
  }

  .timeline-header {
    text-align: center;
    margin-bottom: var(--space-3xl);
  }

  .timeline-header h2 {
    color: var(--color-revolutionary-red);
    margin-bottom: var(--space-md);
  }

  .timeline-stats {
    display: flex;
    justify-content: center;
    gap: var(--space-xl);
    margin-bottom: var(--space-xl);
    flex-wrap: wrap;
  }

  .stat-item {
    text-align: center;
    background: var(--color-paper);
    padding: var(--space-md) var(--space-lg);
    border-radius: var(--radius-md);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
  }

  .stat-value {
    display: block;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-revolutionary-red);
  }

  .stat-label {
    font-size: 0.85rem;
    color: var(--color-text-muted);
  }

  .timeline {
    position: relative;
    padding: var(--space-xl) 0;
  }

  .timeline::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 3px;
    background: linear-gradient(to bottom, var(--color-revolutionary-red), var(--color-socialist-gold));
    transform: translateX(-50%);
  }

  .timeline-event {
    position: relative;
    margin-bottom: var(--space-2xl);
    width: 100%;
  }

  .timeline-event:nth-child(odd) .event-content {
    margin-left: calc(50% + var(--space-xl));
  }

  .timeline-event:nth-child(even) .event-content {
    margin-right: calc(50% + var(--space-xl));
    text-align: right;
  }

  .timeline-point {
    position: absolute;
    left: 50%;
    top: 20px;
    width: 20px;
    height: 20px;
    background: var(--color-revolutionary-red);
    border: 4px solid var(--color-paper);
    border-radius: 50%;
    transform: translateX(-50%);
    box-shadow: var(--shadow-md);
    z-index: 2;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .timeline-point:hover {
    transform: translateX(-50%) scale(1.3);
    background: var(--color-socialist-gold);
  }

  .event-content {
    background: var(--color-paper);
    padding: var(--space-lg);
    border-radius: var(--radius-lg);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-md);
    position: relative;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .event-content:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
    border-color: var(--color-revolutionary-red-light);
  }

  .event-year {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-revolutionary-red);
    margin-bottom: var(--space-xs);
  }

  .event-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--color-text-primary);
    margin-bottom: var(--space-sm);
  }

  .event-meta {
    display: flex;
    gap: var(--space-md);
    flex-wrap: wrap;
    font-size: 0.9rem;
    color: var(--color-text-secondary);
  }

  .event-country {
    background: var(--color-socialist-gold-light);
    color: var(--color-socialist-gold-dark);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-weight: 500;
  }

  .event-genre {
    background: var(--color-border-light);
    color: var(--color-text-muted);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .timeline::before {
      left: 30px;
    }

    .timeline-point {
      left: 30px;
    }

    .timeline-event:nth-child(odd) .event-content,
    .timeline-event:nth-child(even) .event-content {
      margin-left: 60px;
      margin-right: 0;
      text-align: left;
    }

    .timeline-stats {
      gap: var(--space-md);
    }

    .stat-item {
      padding: var(--space-sm) var(--space-md);
      min-width: 80px;
    }
  }
</style>

<script>
import { getDictionaryIndexPath, getChunkPath } from '../utils/api.js';

document.addEventListener('DOMContentLoaded', async function() {
  const skeleton = document.getElementById('timeline-skeleton');
  const content = document.getElementById('timeline-content');
  
  try {
    console.log('üöÄ Cargando timeline de canciones...');
    
    // TODO: Implementar carga de timeline real
    const timelineData = {
      meta: {
        totalSongs: 12,
        dateRange: { earliest: 1871, latest: 2025 },
        genres: ['Hymn', 'Folk', 'Protest'],
        regions: ['Espa√±a', 'Francia', 'Internacional']
      },
      timeline: []
    };
    
    // Renderizar contenido
    content.innerHTML = `
      <div class="timeline-container">
        <div class="timeline-header">
          <h2>Timeline de Himnos Obreros</h2>
          <p>Cronolog√≠a de canciones revolucionarias a trav√©s de la historia</p>
          
          <div class="timeline-stats">
            <div class="stat-item">
              <span class="stat-value">${timelineData.meta.totalSongs}</span>
              <span class="stat-label">Canciones</span>
            </div>
            <div class="stat-item">
              <span class="stat-value">${timelineData.meta.dateRange.latest - timelineData.meta.dateRange.earliest}</span>
              <span class="stat-label">A√±os</span>
            </div>
            <div class="stat-item">
              <span class="stat-value">${timelineData.meta.genres.length}</span>
              <span class="stat-label">G√©neros</span>
            </div>
            <div class="stat-item">
              <span class="stat-value">${timelineData.meta.regions.length}</span>
              <span class="stat-label">Regiones</span>
            </div>
          </div>
        </div>
        
        <div class="timeline">
          ${timelineData.timeline.map(song => `
            <div class="timeline-event" data-song-id="${song.id}">
              <div class="timeline-point" title="${song.title} (${song.year})"></div>
              <div class="event-content">
                <div class="event-year">${song.year}</div>
                <div class="event-title">${song.title}</div>
                <div class="event-meta">
                  <span class="event-country">${song.country}</span>
                  <span class="event-genre">${song.genre}</span>
                </div>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
    
    // Agregar event listeners
    const eventElements = content.querySelectorAll('.timeline-event');
    eventElements.forEach(el => {
      el.addEventListener('click', function() {
        const songId = this.dataset.songId;
        const songData = timelineData.timeline.find(s => s.id == songId);
        
        if (songData) {
          // Navegar a la lecci√≥n correspondiente
          const lessonUrl = `${import.meta.env.BASE_URL}blog/dia-${songId.toString().padStart(2, '0')}-`;
          console.log('Navegando a:', lessonUrl);
          
          // Buscar p√°gina exacta (esto se podr√≠a mejorar con un √≠ndice)
          window.location.href = lessonUrl;
        }
      });
    });
    
    // Transici√≥n suave
    skeleton.style.display = 'none';
    content.style.display = 'block';
    content.style.animation = 'slideIn 0.5s ease-out';
    
    console.log('‚úÖ Timeline cargado exitosamente');
    
  } catch (error) {
    console.error('‚ùå Error cargando timeline:', error);
    
    content.innerHTML = `
      <div style="text-align: center; padding: var(--space-3xl);">
        <div style="font-size: 3rem; margin-bottom: var(--space-lg);">‚ö†Ô∏è</div>
        <h3>Error cargando timeline</h3>
        <p>No se pudo cargar el timeline de canciones.</p>
        <button onclick="location.reload()" style="
          background: var(--color-revolutionary-red);
          color: white;
          border: none;
          padding: var(--space-md) var(--space-lg);
          border-radius: var(--radius-md);
          cursor: pointer;
          margin-top: var(--space-lg);
        ">Reintentar</button>
      </div>
    `;
    
    skeleton.style.display = 'none';
    content.style.display = 'block';
  }
});

// Animaci√≥n para slideIn
const styleSheet = document.createElement('style');
styleSheet.textContent = `
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
`;
document.head.appendChild(styleSheet);
</script>