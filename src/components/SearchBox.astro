---
import Icon from './Icon.astro';
// SearchBox component for blog search functionality
---

<div style="margin-bottom: 2rem;">
  <div style="position: relative; max-width: 600px; margin: 0 auto;">
    <div style="position: relative;">
      <div style="position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: #9ca3af; pointer-events: none;">
        <Icon name="search" size={20} />
      </div>
      <input 
        type="text" 
        id="search-input"
        placeholder="Buscar lecciones por título, descripción, canción..." 
        style="
        width: 100%; 
        padding: 0.75rem 1rem 0.75rem 3rem; 
        border: 2px solid #e5e7eb; 
        border-radius: 8px; 
        font-size: 1rem; 
        transition: border-color 0.2s;
        outline: none;
      "
      />
    </div>
    <div id="search-results" style="
      position: absolute; 
      top: 100%; 
      left: 0; 
      right: 0; 
      background: white; 
      border: 1px solid #e5e7eb; 
      border-radius: 8px; 
      box-shadow: 0 4px 12px rgba(0,0,0,0.1); 
      max-height: 400px; 
      overflow-y: auto; 
      z-index: 1000;
      display: none;
    "></div>
  </div>
  <div id="no-results" style="
    text-align: center; 
    margin-top: 1rem; 
    color: #6b7280; 
    display: none;
  ">
    No se encontraron resultados
  </div>
</div>

<script>
  // Search functionality
  const searchInput = document.getElementById('search-input');
  const searchResults = document.getElementById('search-results');
  const noResults = document.getElementById('no-results');
  let allPosts = [];

  // Fetch all posts data (this would be populated by Astro)
  document.addEventListener('DOMContentLoaded', function() {
    // Get posts data from a global variable or API
    if (window.blogPosts) {
      allPosts = window.blogPosts;
    }
  });

  function normalizeText(text) {
    return text.toLowerCase()
      .normalize('NFD')
      .replace(/[\u0300-\u036f]/g, '') // Remove diacritics
      .replace(/[^\w\s]/g, '') // Remove punctuation
      .trim();
  }

  function searchPosts(query) {
    if (!query || query.length < 2) {
      return [];
    }

    const normalizedQuery = normalizeText(query);
    
    return allPosts.filter(post => {
      const title = normalizeText(post.title || '');
      const description = normalizeText(post.description || '');
      const songTitle = normalizeText(post.originalSong?.title || '');
      const artist = normalizeText(post.originalSong?.artist || '');
      const tags = (post.tags || []).map(tag => normalizeText(tag)).join(' ');
      
      return title.includes(normalizedQuery) ||
             description.includes(normalizedQuery) ||
             songTitle.includes(normalizedQuery) ||
             artist.includes(normalizedQuery) ||
             tags.includes(normalizedQuery);
    }).slice(0, 8); // Limit results
  }

  function displayResults(posts) {
    if (posts.length === 0) {
      searchResults.style.display = 'none';
      noResults.style.display = 'block';
      return;
    }

    noResults.style.display = 'none';
    searchResults.innerHTML = posts.map(post => `
      <div style="
        padding: 1rem; 
        border-bottom: 1px solid #f3f4f6; 
        cursor: pointer;
        transition: background-color 0.2s;
      " onmouseover="this.style.backgroundColor='#f8fafc'" onmouseout="this.style.backgroundColor='white'" onclick="window.location.href='${import.meta.env.BASE_URL}blog/${post.slug}/'">
        <h3 style="margin: 0 0 0.5rem 0; font-size: 1rem; color: #2563eb;">
          ${post.day !== undefined ? `Día ${post.day}: ` : ''}${post.title}
        </h3>
        <p style="margin: 0; font-size: 0.9rem; color: #6b7280; line-height: 1.4;">
          ${post.description}
        </p>
        ${post.originalSong ? `
          <div style="margin-top: 0.5rem; font-size: 0.8rem; color: #9ca3af; display: flex; align-items: center; gap: 0.25rem;">
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 18V5l12-2v13"/><circle cx="6" cy="18" r="3"/><circle cx="18" cy="16" r="3"/></svg>
            "${post.originalSong.title}"
          </div>
        ` : ''}
      </div>
    `).join('');
    
    searchResults.style.display = 'block';
  }

  // Search input handler
  let searchTimeout;
  searchInput.addEventListener('input', function(e) {
    clearTimeout(searchTimeout);
    const query = e.target.value.trim();
    
    if (query.length < 2) {
      searchResults.style.display = 'none';
      noResults.style.display = 'none';
      return;
    }

    searchTimeout = setTimeout(() => {
      const results = searchPosts(query);
      displayResults(results);
    }, 300);
  });

  // Hide search results when clicking outside
  document.addEventListener('click', function(e) {
    if (!e.target.closest('#search-input') && !e.target.closest('#search-results')) {
      searchResults.style.display = 'none';
      noResults.style.display = 'none';
    }
  });

  // Focus styles
  searchInput.addEventListener('focus', function() {
    this.style.borderColor = '#2563eb';
  });

  searchInput.addEventListener('blur', function() {
    setTimeout(() => {
      this.style.borderColor = '#e5e7eb';
    }, 200);
  });
</script>